$browser-context: 16; // Default

@function em($pixels, $context: $browser-context) {
  @return #{$pixels/$context}em
}

@mixin bdesktop {
  @media (min-width: #{$big-desktop-width}) {
    @content;
  }
}

@mixin bgcover{
  background-size: cover;
  background-position: center center;
}

@mixin bgparallax{
  background-attachment: fixed;
  background-size: cover;
  background-position: center top;
}

// Clearfix mixin
%clearfix {
  *zoom: 1;
  &:before, &:after {
    content: " ";
    display: table;
  }
  &:after {
    clear: both;
  }
}

// Define default font size
@function Rem($size) {
  $remSize: $size / 16px;
  @return $remSize * 1rem;
}

@mixin font($size) {
  font-size: $size;
  font-size: Rem($size);
}

// Gradients
@mixin background-gradient($start-color, $end-color, $orientation) { 
    background: $start-color;

    @if $orientation == 'vertical' {
      background: -webkit-linear-gradient(top, $start-color, $end-color);
      background: linear-gradient(to bottom, $start-color, $end-color);
    } @else if $orientation == 'horizontal' {
      background: -webkit-linear-gradient(left, $start-color, $end-color);
      background: linear-gradient(to right, $start-color, $end-color);
    } @else {
      background: -webkit-radial-gradient(center, ellipse cover, $start-color, $end-color);
      background: radial-gradient(ellipse at center, $start-color, $end-color);
    }
}

// Pseudo
@mixin pseudo($display: block, $pos: absolute, $content: ''){
    content: $content;
    display: $display;
    position: $pos;
}

// Define vertical, horizontal, or both position
@mixin center($position) {
  position: absolute;
  
  @if $position == 'vertical' {
    top: 50%;
    -webkit-transform: translateY(-50%);
    -ms-transform: translateY(-50%);
    transform: translateY(-50%);
  }
  @else if $position == 'horizontal' {
    left: 50%;
    -webkit-transform: translateX(-50%);
    -ms-transform: translateX(-50%);
    transform: translate(-50%);
  }
  @else if $position == 'both' {
    top: 50%;
    left: 50%;
    -webkit-transform: translate(-50%, -50%);
    -ms-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%);
  }
}

// MQS

@mixin mq ($consulta) {
  
  $media-xxs:"(min-width : 320px)"; // iPhone Retina 
  $media-xs: "(min-width : 480px)"; // Telefonos
  $media-sm: "(min-width: 768px)";  // Tablets
  $media-md: "(min-width: 992px)"; // Escritorios
  $media-lg: "(min-width: 1200px)"; // Resoluciones grandes
  
  @if $consulta == xxs {
    @media #{$media-xxs} { @content; }
  }
  @if $consulta == xs {
    @media #{$media-xs} { @content; }
  }
  @else if $consulta == sm {
    @media #{$media-sm} { @content; }
  }
  @else if $consulta == md {
    @media #{$media-md}  { @content; }
  }
  @else if $consulta == lg {
    @media #{$media-lg}  { @content; }
  }
}